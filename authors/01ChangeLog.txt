
*************************************************************************
*****  changelog for fastNLO - NLOJET++ user routine
*************************************************************************

******** to be done:
* TK: find a numbering scheme for ipdfwgt, also in tableformat.tex,
*     it is still hardcoded to 0
* MW: 3-jet jobs don't contain information that alpha_s is in higher order
*
BIG ISSUE:
  problems when tables are large (table from TSL0001, FNT200a)
  "FILENAME" variable looses it's content after call FX9999CC


******* changes on 16.09.2005 after MWs renaming frenzy :-) fro rev 66 KR
in ppbar dir
- Added factor 1000 to weights in rsep standalone routine (=> pb)
- Added standalone routine fnt1001midp-stdl.cc
- Adapted Makefile for above
in common dir
- Adapted my paths in fastNLO.(c)sh


******** changes on 14/09/05, for revision 59 MW
  fnt200a-v01.cc
      new author code for preliminary D0 Run II incl jet results

******** changes on 09/09/05, revision 50 MW
**   a few new jet algos -  plus two new scenarios:
**
- added new jet algorithms in dir /common
  - cone-e-07.cc , cone-e-07.h 
    (cone e-scheme / as used in Run II / for 2-jet production only )
  - midpt-e-07.cc, midpt-e07.h,  px_interface.f,pxcone_mod_new.f
    (real iterative cone algo - in e scheme - also for 3- or more jets)
  

- added 2 routines for 630GeV jets and 1800GeV (for ratio 630/1800)
   - fnt1003-v01.cc  - for 630GeV
   - fnt1004-v01.cc  - for 1800GeV
    (both fill 2 "rapidity" ranges - it is the same range, but in the
    second case the cross section is filled weighted by ET^3/2pi)

- added 2 routines for D0 Run II DeltaPhi_dijet
   - fnt2001-w01.cc   (to compute normalization in 4 pT Bins)
   - fnt2001-w02.cc   (for differential DeltaPhi distribution)


******** changes on 08/09/05, revision 49 TK
**
-  ppbar/nlofast-add.cc
   comparision of doubles only to precision of 10^-9 


******** changes on 07/09/05, revision 47 MW
*** all in directory "test"
- tsl0001-v01.cc (LHC)
  - change No pT bins (equidistant binning 50GeV) 
  - optimized Xlimit
- tsr0001-v01.cc (RHIC)
  - include the correct 3 algos (all ET scheme):
       kT-D10, Cone-D07, Cone-D10 
  - optimize xlimits
- Makefile (updated to reflect above changes)


******** changes on 06/09/05, revision 42 MW
- added new jet algorithms: (all .cc and .h files)
      kt2jet-e-07  (for LHC)
      kt2jet-et-10 (for RHIC)
      cone-et-10   (for RHIC)
  (in addition to the already existing algos: cone-et-07 and rsep-et-07)
- fnt1002-tst01.cc: changed prefactor for Xlimit to 0.75
  this limit is safe - and used to produce the tables
- added new routine  tsl0001-v01.cc 
  test version for LHC scenario #1 - kT (D=0.7 / E-scheme) 
  -> this routine has the modified scale factors (not the squares!)
- added new routine  tsr0001-v01.cc
  for RHIC scenario (cone-et-10) -> Thomas needs to add two more algos
  (cone-et-07, kt2jet-et-10)
- modified Makefile

******** changes on 06/09/05, revision 40 TK
- new option in nlofast-add, --patch-scales as first parameter 
  takes square root from scale variation factors

******** changes on 03/09/05, revision 38 TK
- bugfix in nlofast-add, program crashed when more than one 
  NLO file with less than 1+4 scale variations were added 

******** Changes on 02/09/05, revision 37 MW
 - routine "fnrun1incl01a.cc" was copied to new (scenario-specific) 
   name "fnt1001-tst01.cc" (currently still as 'test01' - as long as 
   we play with scale choices)
 - to adopt the future naming convention for jet algorithms
   "d0run1cone.cc" was copied to "rsep-et-07.cc" (Rsep=1.3)
 - new algorithm "cone-et-07.cc" was added (no Rsep)
 - new routine "fnt1002-tst01.cc" was added. It's a copy of 
   "fnt1001-tst01.cc" but uses different jet algo (w/o Rsep)
   -> for scenario FNT1002   - change of xlimit was necessary
 - Makefile changed accordingly

******** changes on 02/09/05, revision 36 TK
* - bugfixes for yesterdays new features, seems to work now
* - added table description for .raw tables from authorcode: 
*   rawtableformat_lo.tex rawtableformat_nlo.tex

******** changes on 01/09/05, revision 35 TK
* - removed: Jet radius now explicitly set in fnrun1incl01a.cc
* - number of mu_r and mu_f scale variations now flexible, added to table definition, see tableformat.tex
*   adjustments made to fnrun1incl01a.cc and nlofast-add.cc, old version moved to nlofast-add-v1.cc
* - nlofast-add.cc is now more flexible, it is possible to give only LO or only NLO tables

******** changes on 31/08/05, revision 33 TK
* Jet radius now explicitly set in fnrun1incl01a.cc

******** changes on 25/08/05, revision 30 MW
* - important changes:
- include Thomas new version of nlofast-add
- include Thomas new version of fnrun1incl01a.cc (with minor cosmetics)
* - minor stuff:
- remove old/obsolete code: fn-d0run1v00.cc (and delete entry in Makefile)
- fastnlo00.f - minor cosmetics / no functional change
- example01.f - add a few lines with different PDFs
- fastnlo00.inc increase No of pT bins (for RHIC scenario)
*  -> with these changes the author code and nlofast-add work perfectly!!
*     this means: the whole code runs (although usercode does not yet produce
*                 results for the scale variations)


******** changes on 26/07/05, revision 27 TK
* some cosmetics applied to fnrun1incl01a.cc, no functional changes

******** changes on 25/07/05, revision 23 MW
* many small changes to speed-up the code (and make it nicer)
- introduce array hxlim[i][j] to compute the h(xlimit) values 
  only once per job (not once per jet and for each scale)
- some code does not have to be done for each jet / for each scale
  -> move some variable calculations outside the loops:
     hxmin,hxmax,hxone (once per event)
     hxlimit,nxmin,nxmax,delta,hxi,hxj,deltamax,deltamin (once per jet)
  ... needless to say that the program becomes not noticeably faster  :-)
* bug in array definitions for scale variations:
  need squares of murscale[i]/mufscale[i] 
  -> changed the values from 0.5/2 to 0.25/4


******** changes on 19/07/05, revision 21 TK
* continue to work on author code for DIS, not yet finished


******** changes on 18/07/05, revision 19 TK
* started author code for DIS
* added fnhera920incl01a.cc, cteq6dis.h, cteq6dis.cc and alew.f
* 

******** changes on 12/07/05, revision 16 TK
* suport for tables in zipped text format for
* nlofast-add.cc (output) and fastnlo00.f (input)
* for both cases the extension .gz marks files to be zipped,unzipped
* fastnlo00.f together with example01.f get the filename for the table now from the commandline
* To make this work, changes to Makefiles and fastnlo.sh/.csh were necessary, libz is required.

******** changes on 11/07/05, revision 14 TK
* now the user code also knows about the new combined table format
* fastnlo00.inc: the number of elements in the last dimension of "array" and "result" changed from 2 to 6
* the new 4 elements are the scale variations, see below
* fastnlo00.f: changed to read in only one combined table for LO& 5*NLO, scale variations are read into the "result" array, but are not used yet
* nlofast-add.cc: bug fix: murscale and mufscale will now not be written anymore

******** changes on 10/07/05, revision 12 TK
* added support for variation of renormalisation and factorisation scales
* fnrun1incl01a.cc: additional dimension in weights array: 0 = central, 1-5 scale variations
* for LO only 0 is filled. Depending on LO or NLO, resulting .raw file has one or five elements in the
* new dimension.
* nlofast-add.cc: additional dimension in weights array: 0 = LO, 1-6, NLO with scale  variations
* book keeping of nevents now separately for LO and NLO

******** changes on 06/07/05 TK
* changes to nlofast-add.cc
* added destination table filename to parameter list of executable
* added tests for file existance before reading
* print for each file number of events
* greatly improved speed to write out table by removing stream flushes after each WRITE



******** changes on 24/06/05 MW
* new user routine: fn-d0run1-00.cc
*    The user routine was changed, according to the Run I measurement
*    by D0 (hep-ex/0011036): 
*     (1) using different jet algorithm  (ET-scheme, Rsep=1.3)
*     (2) using different variables (ET, eta)
* (all further testing should be done using this code!)
*    this routine is still incuding alpha_s and PDFs
*    (for testing purposes!)

******** changes on 22/06/05 TK
* nevents is now of type double in the user routine and nlofast-add
*
* the filename of the table and the #of events after which to write the table 
* are now taken from the nlojet++ command line switches (-n -d --save-after) 
* need to change in "include/bits/nlo-basic_user.h" line 40:
* void phys_output(const std::basic_.....  -> virtual void phys_output(const std::basic_.....

******** changes on 02/05/05 MW
* changed output table back to binary format

******** changes on 22/04/05 TK
* event counter is fixed 

******** changes on 21/04/05 MW:
* rename (again!)   g(x) should be gluon density 
  gxlimit,gxmax,gxmin,gxi,gxj: change "g" to "h"  -> h(x)
* found event counter is wrong in NLO - no solution yet

******** changes on 14/04/05 MW:
* rename variables (to be consistent with documentation)
     nxbins -> ntot   
     delta1 -> deltamax  (closer correspondence to nxmax)
     delta2 -> deltamin  (closer correspondence to nxmin)
     fxlimit,fxmax,fxmin,fxi,fxj: change "f" to "g"  -> g(x)
     introduce: gxone = g(x=1)
* new definition of g(x) = - sqrt(log10(1/x)) 
    (minus sign added - now strictly monotonic increasing)
* new definition of nxmin,nxmax - now strictly monotonic increasing
    with x. Now we have  nxmin <= nxmax  (half-grid more intuitive)
* as a consequence:
  - new computation of delta-variables
  - new implementation of logic to fill weight array


******** changes on 12/04/05 MW:
* resized last index of WEIGHTS array correctly for half grid:
           :weights[j][k][l].resize(l+1)
* redefined NXMIN,NXMAX by (NXBINS-NXMIN-1),(NXBINS-NXMAX-1)
  to achieve NXMIN=<NXMAX to get a correct indicees for half-grid
* indicees for NXMIN,NXMAX when filling WEIGHTS array were swapped
  now corrected: min is last index
* "missing brackets" (see Thomas 11/04/04) were correct before -> changed back
  ... later changed this piece according to new NXMIN,NXMAX definitions


******** changes on 11/04/04 TK:
* added missing brackets at "if (nxmin >=0){"
* introduced non equidistant pt binning:  
  "vector< vector<double> >pthigh;   // array for pT boundaries"
* renamed array "rapmax" to "raphigh". Meaning: right edge of bin boundary, was
  inconsistent with variable "nptmax", which means largest number in array npt.


******** changes on 06/04/05 MW:
* added "-1" to nxmin, nxmax
* Event Counter & code to write table moved to beginning of User Routine
   Otherwise not events but only *jets* within the Phase Space were counted.
   Also, it was luck if e.g. at evt No. 1000 the code was really passed
   (not if there was no jet above 50GeV),
   So the table was not really written every 1000 events
* added an internal counter for total cross section (counting
  all jet contributions within the analysis phase space)
  4 changes:
    in class definition:
       double xsectsum; // total cross section - for test output
    in initfunc:
       xsectsum = 0;
    at start of user routine (where table is written):
       cout<<"    total x-section so far:  "<<xsectsum/nevents<<endl;
    where weight array is filled:
       xsectsum += wt[0]+wt[1]+wt[2]+wt[3]+wt[4]+wt[5]+wt[6];
  -> compared after 30M events: (5min22)            (perfect!!)
           NLOJET++ output: 7.031950e-02    xsectsum/nevent= 0.0703195
* added two lines of text output at the initialization step
     No xbins, mu_r scale factor, mu_f scale factor

