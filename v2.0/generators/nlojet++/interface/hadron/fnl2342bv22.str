# -*-sh-*-
# -------------------------------------------------------------- #
#
#   A steering file for creating a fastNLO table (with NLOJet++)
#
# -------------------------------------------------------------- #

# -------------------------------------------------------------- #
#
#   General fastNLO settings
#
# -------------------------------------------------------------- #
GlobalVerbosity                 INFO        # Global output verbosity of fastNLO toolkit, def.=INFO
                                            #  (and user scenario code if implemented).
                                            # Possible values are: DEBUG,MANUAL,INFO,WARNING,ERROR,SILENT
OutputFilename                  table_inclusive.tab   # Filename of output fastNLO table
OutputPrecision                 8           # Number of decimal digits to store in output table, def.=8.
FlexibleScaleTable              false       # Create table fully flexible in mu_f (larger size) or
                                            # table with fixed number of mu_f scale factors, def.=false.
ScaleVariationFactors {                     # Factorization scale variations (only needed for fixed-scale tables)
 0.5 1.0 2.0                                # List of scale factors must include factor '1'
}                                           # Scale factors will be ordered according to fastNLO convention: (1,nmin,...,nmax)
ReadBinningFromSteering         true        # Specify if binning is read from this file. MUST be true for now.
#>>AlternativeWarmupFilename.txt            # Specify alternative filename to read from, def.=SteerFileBasename_${ScenarioName}_warmup.txt

# -------------------------------------------------------------- #
#
#   Process specific and therefore partially theory-code
#   dependend settings
#
# -------------------------------------------------------------- #
CenterOfMassEnergy              7000.       # Center-of-mass energy in GeV.
# Some examples from the past:   200.       # RHIC
#                               1800.       # TeV Run I
#                               1960.       # TeV Run II
#                                900.       # LHC Injection Run
#                               2360.       # LHC Initial Run
#                               2760.       # LHC HIpp base Run
#                               5020.       # LHC HIpp base Run
#                               7000.       # LHC First Run  (2010/2011)
#                               8000.       # LHC Second Run (2012)
#                              13000.       # LHC Next Run ? (2015)
#                              14000.       # LHC Design Run
PDF1                            2212        # PDF of 1st hadron (following PDG convention).
PDF2                            2212        # PDF of 2nd hadron (following PDG convention).

# -------------------------------------------------------------- #
#
#   Scenario specific variables
#
# -------------------------------------------------------------- #

# -------------------------------
#  Description of scenario
#  (Write each line of description in quotation marks)
# -------------------------------
ScenarioName                    fnl2342bv22
ScenarioDescription {
   "d2sigma-jet_dpTdeta_[pb_GeV]"
   "CMS_Collaboration"
   "Inclusive_Jet_pT"
   "anti-kT_R=0.7"
   "CMS-PAS-xxx"
   "provided by:"
   "fastNLO_2.1.0"
   "If you use this table, please cite:"
   "  D. Britzger, K. Rabbertz, F. Stober, M. Wobisch, arXiv:1208.3641"
}
ScaleDescriptionScale1          "pT_jet_[GeV]"   # Specify scale name and unit
ScaleDescriptionScale2          "Q_[GeV]"        # Specify 2nd scale name and unit (ONLY for flexible-scale tables)
PublicationUnits                12               # Unit which data cross sections are provided (negative power of 10, e.g. 12->pb, 15->fb)

# -------------------------------
#  Specify, how many differential dimensions are measured.
#  Number must be consistent with DimensionLabels, and DimensionIsDifferential, ... below
#    - 1: read in 'SingleDifferentialBinning'
#    - 2: read in 'DoubleDifferentialBinning'
#    - 3: read in 'TripleDifferentialBinning'
# -------------------------------
DifferentialDimension           2
DimensionLabels {                           # Labels (symbol and unit) for the measurement dimension (from outer to inner "loop")
   "Y"
   "pT_[GeV]"
}
DimensionIsDifferential {                   # Specify for each dimension whether it is
   2  2                                     #   - 0: No, i.e. there are two bin borders, but NO division by this bin width
}                                           #   - 1: Point-wise differential, i.e. only one point is given in this dimension
                                            #   - 2: Bin-wise differential, i.e. two bin borders and division by this bin width

# --------------------------------
#  Binning
# - - - - - - - - - - - - - - - -
#    Use either 'SingleDifferentialBinning' or
#    'DoubleDifferentialBinning' or
#    'TripleDifferentialBinning'
#    in accord with
#    'DifferentialDimension' above
# --------------------------------

# Example for SingleDifferentialBinning:
#SingleDifferentialBinning {
# 7 11 18 30 50 100
#}

# Example for DoubleDifferentialBinning:
DoubleDifferentialBinning {{
  1stDimLo   1stDimUp    "----- Array of bin-grid for 2nd dimension ----"
    0          0.5     114 133 153 174 196 220 245 272 300 330 362 395 430 468 507 548 592 638 790 967 1032 1101 1172 1248 1327 1410 1497 1588 1784 2116
    0.5        1       114 133 153 174 196 220 245 272 300 330 362 395 430 468 507 548 592 638 790 967 1032 1101 1172 1248 1327 1410 1497 1588 1784 
    1          1.5     114 133 153 174 196 220 245 272 300 330 362 395 430 468 507 548 592 638 790 967 1032 1101 1172 1684
    1.5        2.0     114 133 153 174 196 220 245 272 300 330 362 395 430 468 507 548 592 638 790 846 905 967 1248
    2.0        2.5     114 133 153 174 196 220 245 272 300 330 362 395 430 468 507 548 592 638 686 905
}}

# Example for TripleDifferentialBinning:
#TripleDifferentialBinning {{
#  1stDimLo  1stDimUp    2ndDimLo  2ndDimUp   "----- Array of bin-grid for 3rd dimension ----"
#   100       150         -1        0.           7 11 18 30 50
#   150       200         -1.       0.           7 11 18 30 50
#   200       400         0.       1.5           7 11 18 30 50
#   400       700         0.       1.5           7 11 18 30 50
#   700       5000        1.5      2.5           7 11 18 30 50
#   5000      15000       1.5      2.5           7 11 18 30 50
#}}

# --------------------------------
#  Define cross-section normalization
# - - - - - - - - - - - - - - - -
CalculateBinSize                true        # Calculate bin width from lower and upper bin boundaries
# KR: Here we have one |eta| bin to normalize to, 2*0.3, but three jet sizes NOT to normalize to, 10.
BinSizeFactor                   6.          # Possibility to provide additional normalization factor, e.g. of 2 for bins in |y|
#                                           # If 'CalculateBinSize' is 'false' provide table with bin widths for normalization
#BinSize { x1 x2 x3 ... }
                                            # If the measurement is not divided by the bin width, then specify
                                            # 'CalculateBinSize' 'true' and use 'DimensionIsDifferential' equal '0' for each dimension.



# -------------------------------------------------------------- #
#
#   Specific fastNLO settings (normally do not need to be changed)
#
# -------------------------------------------------------------- #
ApplyPDFReweighting             true        # Apply reweighting of pdfs for an optimized interpolation, def.=true.
CheckScaleLimitsAgainstBins     true        # Set limits for scale nodes to bin borders, if possible

# -------------------------------------------------------------- #
#  Choose fastNLO interpolation kernels and distance measures
#
#  Currently implemented interpolation kernels
#    - Catmull
#    - Lagrange
#    - OneNode
#    - Linear
#
#  Currently implemented distance measures
#    - linear
#    - loglog025        eq. to (log(log(4*x)))
#    - log10
#    - sqrtlog10        eq. to sqrt(log_10(x))
# -------------------------------------------------------------- #
X_Kernel                        Lagrange
X_DistanceMeasure               "sqrtlog10"
X_NNodes                        15
X_NoOfNodesPerMagnitude         false

Mu1_Kernel                      Lagrange
Mu1_DistanceMeasure             "loglog025"
Mu1_NNodes                      6

# Mu2_Kernel                    "CatmullRom"     # Scale2 not used for fixed-scale tables
# Mu2_DistanceMeasure           loglog025
# Mu2_NNodes                    4
