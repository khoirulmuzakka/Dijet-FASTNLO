! -------------------------------------------------------------- !
!
!  A steering file for creating a fastNLO table
!  suitable for jet-production in DIS with nlojet++
!
! -------------------------------------------------------------- !



! -------------------------------------------------------------- !
! 
!   Generator and process specific variables.
!
! -------------------------------------------------------------- !
OutputPrecision				8		! Number of decimal values in output table
FlexibleScaleTable			true		! currently only flexible scale tables implemented.
ApplyPDFReweighting			true		! Apply reweighting of pdfs for an optimized interpolation. (true)
NPDF					1		! number of PDFs involved (only 2 is implemented)
PDF1					2212		! PDF of first hadron (following PDG convention). Must agree with values from nlojet-module.
PDF2					2212		! PDF of second hadron (following PDG convention). Must agree with values from nlojet-module.
NPDFDim					0		! Internal way to store PDF linear combinations. Use 1 for hadron-hadron collisions (half-matrix storage)	
UnitsOfCoefficients			12		! Units of coeffients as passed to fastNLO (negative power of 10: pb->12, fb->15)

! number of subprocesses of the considered process.
! Since the calculation order is obtained from generator, only the necessary variable is used.
NSubProcessesLO				2		! Flexible scale tables store 7 number of processes in LO, although only 6 are required.
NSubProcessesNLO			3		
NSubProcessesNNLO			3		
AsymmetricProcesses {{				! specify processes that need to to be exchanged in half-matrix notation, when xmin>xmax
   ProcID	AsymProcID
}}

IPDFdef1				2		! Define PDF linear combinations corresponding to partonic subprocesses (hadron-hadron: 3)
IPDFdef2				1		! Flag to define PDF linear combinations (dependent on IPDFdef1. Use 1 for jet-production in pp/ppbar)
IPDFdef3LO				2		! Unique identifier (dependent on IPDFdef1, IPDFdef2) for specifying the PDF linear combinations.
IPDFdef3NLO				3		! Unique identifier (dependent on IPDFdef1, IPDFdef2) for specifying the PDF linear combinations.
IPDFdef3NNLO				3		! Unique identifier (dependent on IPDFdef1, IPDFdef2) for specifying the PDF linear combinations.


!  Descritption of used generator code. Include also citations here!
!  Embrace each single line in quotation marks.
CodeDescription {
   "NLOJet++_4.1.3"
   "Z. Nagy, Phys. Rev. D 59 (1999) 014020"
   "Z. Nagy, Phys. Rev. Lett. 87, 082001 (2001)"
}
! -------------------------------------------------------------- !



! -------------------------------------------------------------- !
!   Variables which are obtained and superseeded from NLOJET++, but may be 
!   useful for other generators.
! -------------------------------------------------------------- !

! -------------------------------
!   Center of mass energy (is obtained from nlojet)
CenterOfMassEnergy		

! -------------------------------
!   Order of alpha_s of the leading-order process (is obtained from nlojet)
LeadingOrder				1

! -------------------------------
!   Order of alpha_s of the calculation (is obtained from nlojet)
OrderInAlphasOfCalculation		1

! -------------------------------
!   Specify filename of output fastNLO table
OutputFilename				test.tab		! is superseede by command in nlojet-module

! -------------------------------------------------------------- !






! -------------------------------------------------------------- !
!  Choose interpolation kernel and distance measure
!
!  Currently implemented interpolation kernels
!    - CatmulRom
!
!  Currently implemented distance measures
!    - linear
!    - loglog025	eq. to (log(log(4*x)))
!    - log10
!    - sqrtlog10	eq. to sqrt(log_10(x))	
! -------------------------------------------------------------- !
X_Kernel				"CatmulRom"
X_DistanceMeasure			"log10"
X_NNodes				8		! 
X_NoOfNodesPerMagnitude			true		! 

Mu1_Kernel				"CatmulRom"
Mu1_DistanceMeasure			"loglog025"
Mu1_NNodes				5		

Mu2_Kernel				"CatmulRom"
Mu2_DistanceMeasure			loglog025
Mu2_NNodes				4		





! -------------------------------------------------------------- !
!
!   Scenario specific variables
!
! -------------------------------------------------------------- !


! -------------------------------------------------------------- !
!   Unit in barns of the publication
!   (negative power of 10)
!   pb: 12
!   fb: 15
! -------------------------------------------------------------- !
PublicationUnits		12



! -------------------------------------------------------------- !
!  Description of scenario
!  (Write each line of description in quotation marks)
! -------------------------------------------------------------- !
ScenarioName		fnh5001v22
ScenarioDescription {
   "Inclusive jets - d2sigma/dpTdQ2 [pb]"
   "H1 Collaboration"
   "Inclusive jet cross sections in DIS"
   "kT-algorithm R=1, High Q2, Hera-II"
   "H1prelim-11-032, Fig. 7"
}



! -------------------------------------------------------------- !
!  Specify if binning is read from this file
!    If set to false, binning is taken from warmup file
!    If set to false, all binning related values are not used
! -------------------------------------------------------------- !
ReadBinningFromSteering		true


! -------------------------------------------------------------- !
! Scale descritptions
!   If flexible-scale table: specify name of the variable of the two scales.
!   If standard table is demanded, only 'ScaleDescriptionScale1' is required.
! --------------------------------------------------------------
ScaleDescriptionScale1		"Q"
ScaleDescriptionScale2		"p_T"



! -------------------------------------------------------------- !
!  How many differential dimensions 
!  are measured.
!  Number must be consistent with DimensionLabels, and DimensionIsDifferential, ...
!    - 1: read in 'SingleDiffBinning' (array)
!    - 2: read in 'DoubleDifferentialBinning' (table)
!    - 3: read in 'TripleDifferentialBinning' (table)
! -------------------------------------------------------------- !
DifferentialDimension		2


! -------------------------------------------------------------- !
!  Labels for the measurement dimension
!    Give a label for every dimension 
!    according to 'DifferentialDimension'
! -------------------------------------------------------------- !
DimensionLabels {
 "p_T"
 "Q^2"
}



! --------------------------------------------------------------- !
!   Binning
! - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
! Use either 'SingleDiffBinning' or
! 'DoubleDifferentialBinning' according to
! specification of 'DifferentialDimension'
! (Triple-differential, and non-differential measurements not yet implemented)
! --------------------------------------------------------------- !

! Example !!
SingleDiffBinning {
 7 11 18 30 50 100
}

! Example !!
DoubleDifferentialBinning {{
  1stDimLo   1stDimUp    "----- Array of bin-grid for 2nd dimension ----"
    150		200       7  11  18  30  50
    200         270       7  11  18  30  50 
    270         400       7  11  18  30  50
    400         700       7  11  18  30  50
    700        5000       7  11  18  30  50
   5000       15000       7  11  18  30  50
}}


! -------------------------------------------------------------- !
!  Is this a differential measurement in dimension X?
!  Specify flag for each dimension.
!    - 0:  No		
!    - 1:  Yes
!    - 2:  Divide Cross Section by bin width of that dimension
! -------------------------------------------------------------- !
DimensionIsDifferential { 
   2   2 
}


! --------------------------------------------------------------- !
!  Calculate bin width from lower and upper bin boundary
!    - if 'false':
!       specify a table of the width of every bin:
!        BinWidth { x1 x2 x3 ... }
!    - if 'true':
!      Specify a multiplicative factor for bin width (useful for |y|-measurements)
!
!  If the measurement is not divided by the bin width, then specify
!   'CalculateBinWidth  true' and use 'DimensionIsDifferential' equal '0' for each dimension.
! --------------------------------------------------------------- !
CalculateBinWidth		true
BinWidthFactor			1.



! --------------------------------------------------------------- !
!   Include automatically generated warm-up
!   by convention it must be:
!     <steerfile>_<ScenarioName>_warmup.txt
!   with 
!     -  <steerfile>	name if this file, without .str and .steer
!     -  <ScenarioName> as given above
!
!   If no Warmup file found, fastNLO seeks for warmup file
!   by itsself.
!   It is also possible to copy the warmup values directly 
!   into this file (in order to keep information together).
!
!   Ignore 'error' message from 'read_steer'.
! --------------------------------------------------------------- !
! #include:fnh5001v22_${ScenarioName}_warmup.txt


