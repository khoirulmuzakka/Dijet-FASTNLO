! -------------------------------------------------------------- !
!
!  A steering file for creating a fastNLO table with
!  ttbar cross section program by Marco Guzzi
!
! -------------------------------------------------------------- !



! -------------------------------------------------------------- !
! 
!   Generator and process specific variables.
!   ( A change of these variable partly requires new coding. )
!
! -------------------------------------------------------------- !
OutputPrecision			8	! Number of decimal values in output table
FlexibleScaleTable		true	! currently only flexible scale tables implemented.
ApplyPDFReweighting		true	! Apply reweighting of pdfs for an optimized interpolation. (true)
NPDF				2	! number of PDFs involved (only 2 is implemented)
PDF1				2212	! PDF of first hadron (following PDG convention). Must agree with values from nlojet-module.
PDF2				2212	! PDF of second hadron (following PDG convention). Must agree with values from nlojet-module.
NPDFDim				1	! Internal way to store PDF linear combinations. Use 1 for hadron-hadron collisions (half-matrix storage)	
UnitsOfCoefficients		12	! Units of coeffients as passed to fastNLO (negative power of 10: pb->12, fb->15)

! number of subprocesses of the considered process.
! Since the calculation order is obtained from generator, only the necessary variable is used.
NSubProcessesLO			2	! Flexible scale tables store 7 number of processes in LO, although only 6 are required.
NSubProcessesNLO		2	
NSubProcessesNNLO		2	
AsymmetricProcesses {{		! specify processes that need to to be exchanged in half-matrix notation, when xmin>xmax
   ProcID	AsymProcID
}}

IPDFdef1			3	! Define PDF linear combinations corresponding to partonic subprocesses (hadron-hadron: 3)
IPDFdef2			2	! Flag to define PDF linear combinations (dependent on IPDFdef1. Use 1 for jet-production in pp/ppbar)
IPDFdef3LO			0	! Unique identifier (dependent on IPDFdef1, IPDFdef2) for specifying the PDF linear combinations.
IPDFdef3NLO			0	! Unique identifier (dependent on IPDFdef1, IPDFdef2) for specifying the PDF linear combinations.
IPDFdef3NNLO			0	! Unique identifier (dependent on IPDFdef1, IPDFdef2) for specifying the PDF linear combinations.

!  Descritption of used generator code. Include also citations here!
!  Embrace each single line in quotation marks.
CodeDescription {
   "ttbar cross section @ NNLO"
   "M. Guzzi, S. Moch"
   "to be published"
}
! -------------------------------------------------------------- !




! -------------------------------------------------------------- !
!   Variables which are obtained and superseeded from NLOJET++, but may be 
!   useful for other generators.
! -------------------------------------------------------------- !

! -------------------------------
!   Center of mass energy
CenterOfMassEnergy		7000

! -------------------------------
!   Order of alpha_s of the leading-order process (is obtained from nlojet)
LeadingOrder			2

! -------------------------------
!   Order of alpha_s of the calculation (should be superseeded with value from generator)
OrderInAlphasOfCalculation	4

! -------------------------------
!   Specify filename of output fastNLO table
OutputFilename			testttbar000.tab

! -------------------------------------------------------------- !






! -------------------------------------------------------------- !
!  Choose interpolation kernel and distance measure
!
!  Currently implemented interpolation kernels
!    - CatmulRom
!
!  Currently implemented distance measures
!    - linear
!    - loglog025	eq. to (log(log(4*x)))
!    - log10
!    - sqrtlog10	eq. to sqrt(log_10(x))	
! -------------------------------------------------------------- !
X_Kernel		"CatmulRom"
X_DistanceMeasure	"sqrtlog10"
X_NNodes		6		 
X_NoOfNodesPerMagnitude	true		 

Mu1_Kernel		"CatmulRom"
Mu1_DistanceMeasure	"loglog025"
Mu1_NNodes		5		

Mu2_Kernel		"CatmulRom"
Mu2_DistanceMeasure	linear
Mu2_NNodes		4		





! -------------------------------------------------------------- !
!
!   Scenario specific variables
!
! -------------------------------------------------------------- !


! -------------------------------
!   Unit in barns of the publication
!   (negative power of 10)
!   pb: 12
!   fb: 15
! -------------------------------
PublicationUnits	12




! -------------------------------
!  Description of scenario
!  (Write each line of description in quotation marks)
! -------------------------------
ScenarioName            fnlttbar000

ScenarioDescription {
"Test scenario for first implementation of"
"ttbar cross section up to NNLO."
"Double-differential bin integrated cross sections."
"generator by Marco Guzzi"
"fastNLO by Daniel Britzger"
}



! -------------------------------
!  Specify if binning is read from this file
! -------------------------------
ReadBinningFromSteering		true


! -------------------------------
!  How many differential dimensions 
!  are measured.
!  Number must be consistent with DimensionLabels, and DimensionIsDifferential, ...
!    - 1: read in 'SingleDiffBinning'
!    - 2: read in 'DoubleDifferentialBinning'
!    - 3: read in 'TripleDifferentialBinning'
! -------------------------------
DifferentialDimension		2


! -------------------------------
!  Labels for the measurement dimension
! -------------------------------
DimensionLabels {
"y"
"p_T"
}

! If flexible-scale table: specify name of the variable of the two scales.
! If standard table is demanded, only 'ScaleDescriptionScale1' is required.
ScaleDescriptionScale1		"p_T"
ScaleDescriptionScale2		"y"


! --------------------------------
!   Binning
! - - - - - - - - - - - - - - - - 
! Use either 'SingleDiffBinning' or
! 'DoubleDifferentialBinning' according to
! specification of 'DifferentialDimension'
! (Triple-differential, and non-differential measurements not yet implemented)
! --------------------------------

! Example !!
SingleDiffBinning {
 7 11 18 30 50 100
}

! Example !!
DoubleDifferentialBinning {{
  1stDimLo   1stDimUp    "----- Array of bin-grid for 2nd dimension ----"
    0           1           0 10 20 30 40 50 60 70 80 90 100 110 120 130 140 150 160 170 180 190 200
    1          2.0          0 10 20 30 40 50 60 70 80 90 100 110 120 130 140 150 160 170 180 190 200
   2.0         3.0          0 10 20 30 40 50 60 70 80 90 100 110 120 130 140 150 160 170 180 190 200
   3.0         4.0          0 10 20 30 40 50 60 70 80 90 100 110 120 130 140 150 160 170 180 190 200
   4.0         5.0          0 10 20 30 40 50 60 70 80 90 100 110 120 130 140 150 160 170 180 190 200
}}


! -------------------------------
!  Is this a differential measurement in dimension X?
!  Specify flag for each dimension.
!    - 0:  NO
!    - 1:  YES
!    - 2:  Divide Cross Section by bin width of that dimension
! -------------------------------
DimensionIsDifferential { 
 0 0 
}


! --------------------------------
!  Calculate bin width from lower and upper bin boundary
!    - if 'false':
!       specify a table of the width of every bin:
!        BinWidth { x1 x2 x3 ... }
!    - if 'true':
!      Specify a multiplicative factor for bin width (useful for |y|-measurements)
!
!  If the measurement is not divided by the bin width, then specify
!   'CalculateBinWidth  true' and use 'DimensionIsDifferential' equal '0' for each dimension.
! --------------------------------

CalculateBinWidth	true
BinWidthFactor		1.



! ----------------------------------------------------------!
!   Include automatically generated warm-up
!   by convention it must be:
!     <steerfile>_<ScenarioName>_warmup.txt
!   with 
!     -  <steerfile>	name if this file, without .str and .steer
!     -  <ScenarioName> as given above
!
!   If no Warmup file found, fastNLO seeks for warmup file
!   by itsself.
!   It is also possible to copy the warmup values directly 
!   into this file (in order to keep information together).
!
!   Ignore 'error' message from 'read_steer'.
! ----------------------------------------------------------!
#include:fnlttbar000_${ScenarioName}_warmup.txt



